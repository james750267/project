
`define ADD      32'b?_0???????????????_000?????_0_110011
`define SUB      32'b?_1???????????????_000?????_0_110011
`define SLL      32'b?_0???????????????_001?????_0_110011
`define SLT      32'b?_0???????????????_010?????_0_110011
`define SLTU     32'b?_0???????????????_011?????_0_110011
`define XOR      32'b?_0???????????????_100?????_0_110011
`define SRL      32'b?_0???????????????_101?????_0_110011
`define SRA      32'b?_0???????????????_101?????_0_110011
`define OR       32'b?_0???????????????_110?????_0_110011
`define AND      32'b?_0???????????????_111?????_0_110011
`define ADDI     32'b?????????????????_000?????_0_010011
`define SLTI     32'b?????????????????_010?????_0_010011
`define SLTIU    32'b?????????????????_011?????_0_010011
`define XORI     32'b?????????????????_100?????_0_010011
`define ORI      32'b?????????????????_110?????_0_010011
`define ANDI     32'b?????????????????_111?????_0_010011
`define SLLI     32'b?_0???????????????_001?????_0_010011
`define SRLI     32'b?_0???????????????_101?????_0_010011
`define SRAI     32'b?_0???????????????_101?????_0_010011
`define LB       32'b?????????????????_000?????_0_000011
`define LH       32'b?????????????????_010?????_0_000011
`define LW       32'b?????????????????_011?????_0_000011
`define LBU      32'b?????????????????_100?????_0_000011
`define LHU      32'b?????????????????_110?????_0_000011
`define SB       32'b?????????????????_000?????_0_100011
`define SH       32'b?????????????????_001?????_0_100011
`define SW       32'b?????????????????_010?????_0_100011
`define BEQ      32'b?????????????????_000?????_1_100011
`define BNE      32'b?????????????????_001?????_1_100011
`define BLT      32'b?????????????????_100?????_1_100011
`define BGE      32'b?????????????????_101?????_1_100011
`define BLTU     32'b?????????????????_110?????_1_100011
`define BGEU     32'b?????????????????_111?????_1_100011
`define JAL      32'b?????????????????_????????_1_101111
`define JALR     32'b?????????????????_000?????_1_100111
`define LUI      32'b?????????????????_????????_0_110111
`define AUIPC    32'b?????????????????_????????_0_010111
module testbench ();

  reg clk;
  reg reset;

  initial begin
    clk = 0;
    reset = 1;
    #4 reset = 0;
  end

  riscv_top u_riscv (
    .clk      (clk),
    .reset    (reset)
  );

  always #10 clk = ~clk;

//==================================
//
//==================================
reg [63:0] inst_name;
always @ (*) begin
  casez (u_riscv.u_control.inst)
    `ADD: inst_name = "ADD";
    `SUB: inst_name = "SUB";
    `SLL: inst_name = "SLL";
    `SLT: inst_name = "SLT";
    `SLTU: inst_name = "SLTU";
    `XOR: inst_name = "XOR";
    `SRL: inst_name = "SRL";
    `SRA: inst_name = "SRA";
    `OR: inst_name = "OR";
    `AND: inst_name = "AND";
    `ADDI: inst_name = "ADDI";
    `SLTI: inst_name = "SLTI";
    `SLTIU: inst_name = "SLTIU";
    `XORI: inst_name = "XORI";
    `ORI: inst_name = "ORI";
    `ANDI: inst_name = "ANDI";
    `SLLI: inst_name = "SLLI";
    `SRLI: inst_name = "SRLI";
    `SRAI: inst_name = "SRAI";
    `LB: inst_name = "LB";
    `LH: inst_name = "LH";
    `LW: inst_name = "LW";
    `LBU: inst_name = "LBU";
    `LHU: inst_name = "LHU";
    `SB: inst_name = "SB";
    `SH: inst_name = "SH";
    `SW: inst_name = "SW";
    `BEQ: inst_name = "BEQ";
    `BNE: inst_name = "BNE";
    `BLT: inst_name = "BLT";
    `BGE: inst_name = "BGE";
    `BLTU: inst_name = "BLTU";
    `BGEU: inst_name = "BGEU";
    `JAL: inst_name = "JAL";
    `JALR: inst_name = "JALR";
    `LUI: inst_name = "LUI";
    `AUIPC: inst_name = "AUIPC";
    default: inst_name = "none";
  endcase
end

//==================================
endmodule
